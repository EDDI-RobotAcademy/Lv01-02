   0x0000555555555184 <+27>:	movl   $0x1,-0x14(%rbp)
   0x000055555555518b <+34>:	movl   $0x2,-0x10(%rbp)
   0x0000555555555192 <+41>:	mov    -0x10(%rbp),%edx
   0x0000555555555195 <+44>:	mov    -0x14(%rbp),%eax
   0x0000555555555198 <+47>:	mov    %edx,%r8d
   0x000055555555519b <+50>:	mov    $0x1,%ecx
   0x00005555555551a0 <+55>:	mov    %eax,%edx
   0x00005555555551a2 <+57>:	mov    $0x0,%esi
   0x00005555555551a7 <+62>:	lea    0xe56(%rip),%rdi        # 0x555555556004
   0x00005555555551ae <+69>:	mov    $0x0,%eax
   0x00005555555551b3 <+74>:	callq  0x555555555070 <printf@plt>

배열의 시작 주소를 edx에 배치한다.
r8d의 경우엔 r8 레지스터의 32비트 표현이다.
int형 자료이므로 순차적으로 4바이트씩 공간에 배치하는 것을 볼 수 있다.
데이터 자체에 접근할 때도 edx를 기준으로 활용함을 볼 수 있다.
즉, 배열 사용시에는 dx 레지스터가 활용됨을 볼 수 있다.
